// Generated by de.jabc.cinco.meta.plugin.event.generator.template.EventUserClassTemplate

package info.scce.cinco.product.scchart.events

import graphmodel.Direction
import graphmodel.ModelElementContainer
import info.scce.cinco.product.scchart.mglid.scchart.InitilalSuperState

/* 
 * About this class:
 * - This is a default implementation for info.scce.cinco.product.scchart.mglid.scchart.event.InitilalSuperStateEvent.
 * - This class was generated, because you added an "@event" annotation to
 *   Container "InitilalSuperState" in "SCChart.mgl".
 * - This file will not be overwritten on future generation processes.
 * 
 * Edit this class:
 * - If you wish InitilalSuperState to react the same way as its super class SuperState,
 *   you may delete the method or leave it as is (with only the super call).
 * - If you wish to only add functionality, leave the super call in the
 *   corresponding method and add your code to it.
 * - If you wish to break the inheritance chain, remove the super call, but do
 *   not delete the corresponding method. You may leave it empty or write new
 *   code.
 * 
 * Available event methods:
 * - preCreate(Class<? extends InitilalSuperState> elementClass, ModelElementContainer container, int x, int y, int width, int height)
 * - preDelete(InitilalSuperState element)
 * - preMove(InitilalSuperState element, ModelElementContainer newContainer, int newX, int newY)
 * - preResize(InitilalSuperState element, int newWidth, int newHeight, int newX, int newY, Direction direction)
 * - postAttributeChange(InitilalSuperState element, String attribute, Object oldValue)
 * - postCreate(InitilalSuperState element)
 * - postDelete(InitilalSuperState element)
 * - postDoubleClick(InitilalSuperState element)
 * - postMove(InitilalSuperState element, ModelElementContainer oldContainer, int oldX, int oldY)
 * - postResize(InitilalSuperState element, int oldWidth, int oldHeight, int oldX, int oldY, Direction direction)
 * - postSelect(InitilalSuperState element)
 */
final class InitilalSuperStateEvent extends info.scce.cinco.product.scchart.mglid.scchart.event.InitilalSuperStateEvent {
	
	override preCreate(Class<? extends InitilalSuperState> elementClass, ModelElementContainer container, int x, int y, int width, int height) {
		// TODO: Auto-generated method stub
		super.preCreate(elementClass, container, x, y, width, height)
	}
	
	override preDelete(InitilalSuperState element) {
		// TODO: Auto-generated method stub
		super.preDelete(element)
	}
	
	override preMove(InitilalSuperState element, ModelElementContainer newContainer, int newX, int newY) {
		// TODO: Auto-generated method stub
		super.preMove(element, newContainer, newX, newY)
	}
	
	override preResize(InitilalSuperState element, int newWidth, int newHeight, int newX, int newY, Direction direction) {
		// TODO: Auto-generated method stub
		super.preResize(element, newWidth, newHeight, newX, newY, direction)
	}
	
	override postAttributeChange(InitilalSuperState element, String attribute, Object oldValue) {
		// TODO: Auto-generated method stub
		super.postAttributeChange(element, attribute, oldValue)
	}
	
	override postCreate(InitilalSuperState element) {
		// TODO: Auto-generated method stub
		super.postCreate(element)
	}
	
	override postDelete(InitilalSuperState element) {
		// TODO: Auto-generated method stub
		// Set up your post delete Runnable here.
		// This will be executed pre delete.
		val superPostDelete = super.postDelete(element)
		return [
			// This is your post delete Runnable.
			// This will be executed post delete.
			superPostDelete.run
		]
	}
	
	override postDoubleClick(InitilalSuperState element) {
		// TODO: Auto-generated method stub
		super.postDoubleClick(element)
	}
	
	override postMove(InitilalSuperState element, ModelElementContainer oldContainer, int oldX, int oldY) {
		// TODO: Auto-generated method stub
		super.postMove(element, oldContainer, oldX, oldY)
	}
	
	override postResize(InitilalSuperState element, int oldWidth, int oldHeight, int oldX, int oldY, Direction direction) {
		// TODO: Auto-generated method stub
		super.postResize(element, oldWidth, oldHeight, oldX, oldY, direction)
	}
	
	override postSelect(InitilalSuperState element) {
		// TODO: Auto-generated method stub
		super.postSelect(element)
	}
	
}
